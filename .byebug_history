c
@current_user
c
request.headers.to_h.keys
request.headers.keys
request.headers["Authorization"]
c
request.format
c
request.format
c
request.format
c
request.format
c
request.format
c
request.format
request.mime_type
request.mime
response
c
request.format
params
request
c
session[:user_id]
c
session.keys
session[:user_id]
session[user_id]
session
c
params[:list]
params
c
wall_post
wall_id
c
@link.user_wall_id
c
!!wall_post
wall_post
c
wall_id
c
!!params["postToWall"]
params["postToWall"]
c
params[:links]
c
link_data[:url]
c
links.each_with_index {|link, i| puts i}
links.class
links
c
params[:list]
c
params[:list]
c
params
params[:list]
c
params
params[:list]
c
params[:links][1]
params[:links][0]
params[:links][1]
params[:links][2]
params[:links][3]
params[:links][4]
params[:links].length
params[:links].each{|link| puts link[:id]}
params[:links].each{|link| puts link[:url]}
params[:links].each{|link| puts link.title}
params[:links]
c
tag_to_remove[0].destroy
tag_to_remove.destroy
c
tag_to_remove
c
list_id
untagged
c
Tag.create(name: tag[:name])
tag[:name]
tag
c
tags
c
params[:tags][1].id
params[:tags]
c
params[:tags]
c
params
c
methods.include?(:authenticate_user)
methods.include?(:authenticate_user!)
c
methods.include?(:current_usdfdsf)
methods.include?(:current_user)
methods
asdf
foo
current_user
c
tags
c
params
tags
c
tags
c
tags
c
tags
c
option
tags
c
tags
c
params
c
next
params
c
@lists[0]["votes"]
@lists[0].votes
@lists
c
tagging.save
c
tags
c
tags.map! do |tag|.
tags.map! do |tag|
    end
      return tag
      end
        tag[:id] = saved_tag.id
        saved_tag = Tag.create(name: tag[:name])
      if !tag[:id]
tags.map! do |tag|
c
b
n
tags
q
rails c
c
params
c
JSON.parse(params["tags"][0])["id"]
JSON.parse(params["tags"][0])[:id]
JSON.parse(params["tags"][0]).id
JSON.parse params["tags"][0]
params["tags"][0].id
params["tags"][0]
params
c
params
c
params
c
params
c
params
c
params
c
params[:tags]
params
c
params["selectedTags"]
params
